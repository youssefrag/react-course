{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from \"firebase/auth\";\nimport { getFirestore, doc, getDoc, setDoc, collection, writeBatch } from \"firebase/firestore\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyACQ8QKSWAvZfYXmNgFhuEdKx4-xpSA7Zw\",\n  authDomain: \"crwn-clothing-db-32b9f.firebaseapp.com\",\n  projectId: \"crwn-clothing-db-32b9f\",\n  storageBucket: \"crwn-clothing-db-32b9f.appspot.com\",\n  messagingSenderId: \"444432771037\",\n  appId: \"1:444432771037:web:fc4d2340c30e31b043f834\"\n};\nconst firebaseApp = initializeApp(firebaseConfig);\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider);\nexport const db = getFirestore();\nexport const addCollectionAndDocuments = (collectionKey, objectd) => {};\nexport const createUserDocumentFromAuth = async function (userAuth) {\n  let additionalInformation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (!userAuth) return;\n  const userDocRef = doc(db, \"users\", userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation\n      });\n    } catch (error) {\n      console.log(\"error creating the user\", error.message);\n    }\n  }\n  return userDocRef;\n};\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await signInWithEmailAndPassword(auth, email, password);\n};\nexport const signOutUser = async () => await signOut(auth);\nexport const onAuthStateChangedListener = callback => onAuthStateChanged(auth, callback);\n\n/*\n{\nnext: callback,\nerror: errorCallback\ncomplete: completedCallback\n}\n*/","map":{"version":3,"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","getFirestore","doc","getDoc","setDoc","collection","writeBatch","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","googleProvider","setCustomParameters","prompt","auth","signInWithGooglePopup","signInWithGoogleRedirect","db","addCollectionAndDocuments","collectionKey","objectd","createUserDocumentFromAuth","userAuth","additionalInformation","userDocRef","uid","userSnapshot","exists","displayName","email","createdAt","Date","error","console","log","message","createAuthUserWithEmailAndPassword","password","signInAuthUserWithEmailAndPassword","signOutUser","onAuthStateChangedListener","callback"],"sources":["/Users/youssefragab/Documents/courses/react-course/capstone/src/utils/firebase/firebase.utils.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport {\n  getAuth,\n  signInWithRedirect,\n  signInWithPopup,\n  GoogleAuthProvider,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  signOut,\n  onAuthStateChanged,\n} from \"firebase/auth\";\nimport {\n  getFirestore,\n  doc,\n  getDoc,\n  setDoc,\n  collection,\n  writeBatch,\n} from \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyACQ8QKSWAvZfYXmNgFhuEdKx4-xpSA7Zw\",\n  authDomain: \"crwn-clothing-db-32b9f.firebaseapp.com\",\n  projectId: \"crwn-clothing-db-32b9f\",\n  storageBucket: \"crwn-clothing-db-32b9f.appspot.com\",\n  messagingSenderId: \"444432771037\",\n  appId: \"1:444432771037:web:fc4d2340c30e31b043f834\",\n};\n\nconst firebaseApp = initializeApp(firebaseConfig);\n\nconst googleProvider = new GoogleAuthProvider();\n\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\",\n});\n\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () =>\n  signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () =>\n  signInWithRedirect(auth, googleProvider);\n\nexport const db = getFirestore();\n\nexport const addCollectionAndDocuments = (collectionKey, objectd) => {};\n\nexport const createUserDocumentFromAuth = async (\n  userAuth,\n  additionalInformation = {}\n) => {\n  if (!userAuth) return;\n\n  const userDocRef = doc(db, \"users\", userAuth.uid);\n\n  const userSnapshot = await getDoc(userDocRef);\n\n  if (!userSnapshot.exists()) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation,\n      });\n    } catch (error) {\n      console.log(\"error creating the user\", error.message);\n    }\n  }\n\n  return userDocRef;\n};\n\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\n\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n\n  return await signInWithEmailAndPassword(auth, email, password);\n};\n\nexport const signOutUser = async () => await signOut(auth);\n\nexport const onAuthStateChangedListener = (callback) =>\n  onAuthStateChanged(auth, callback);\n\n/*\n{\nnext: callback,\nerror: errorCallback\ncomplete: completedCallback\n}\n*/\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SACEC,OAAO,EACPC,kBAAkB,EAClBC,eAAe,EACfC,kBAAkB,EAClBC,8BAA8B,EAC9BC,0BAA0B,EAC1BC,OAAO,EACPC,kBAAkB,QACb,eAAe;AACtB,SACEC,YAAY,EACZC,GAAG,EACHC,MAAM,EACNC,MAAM,EACNC,UAAU,EACVC,UAAU,QACL,oBAAoB;AAE3B,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,wCAAwC;EACpDC,SAAS,EAAE,wBAAwB;EACnCC,aAAa,EAAE,oCAAoC;EACnDC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,WAAW,GAAGtB,aAAa,CAACe,cAAc,CAAC;AAEjD,MAAMQ,cAAc,GAAG,IAAInB,kBAAkB,EAAE;AAE/CmB,cAAc,CAACC,mBAAmB,CAAC;EACjCC,MAAM,EAAE;AACV,CAAC,CAAC;AAEF,OAAO,MAAMC,IAAI,GAAGzB,OAAO,EAAE;AAC7B,OAAO,MAAM0B,qBAAqB,GAAG,MACnCxB,eAAe,CAACuB,IAAI,EAAEH,cAAc,CAAC;AACvC,OAAO,MAAMK,wBAAwB,GAAG,MACtC1B,kBAAkB,CAACwB,IAAI,EAAEH,cAAc,CAAC;AAE1C,OAAO,MAAMM,EAAE,GAAGpB,YAAY,EAAE;AAEhC,OAAO,MAAMqB,yBAAyB,GAAG,CAACC,aAAa,EAAEC,OAAO,KAAK,CAAC,CAAC;AAEvE,OAAO,MAAMC,0BAA0B,GAAG,gBACxCC,QAAQ,EAEL;EAAA,IADHC,qBAAqB,uEAAG,CAAC,CAAC;EAE1B,IAAI,CAACD,QAAQ,EAAE;EAEf,MAAME,UAAU,GAAG1B,GAAG,CAACmB,EAAE,EAAE,OAAO,EAAEK,QAAQ,CAACG,GAAG,CAAC;EAEjD,MAAMC,YAAY,GAAG,MAAM3B,MAAM,CAACyB,UAAU,CAAC;EAE7C,IAAI,CAACE,YAAY,CAACC,MAAM,EAAE,EAAE;IAC1B,MAAM;MAAEC,WAAW;MAAEC;IAAM,CAAC,GAAGP,QAAQ;IACvC,MAAMQ,SAAS,GAAG,IAAIC,IAAI,EAAE;IAE5B,IAAI;MACF,MAAM/B,MAAM,CAACwB,UAAU,EAAE;QACvBI,WAAW;QACXC,KAAK;QACLC,SAAS;QACT,GAAGP;MACL,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,KAAK,CAACG,OAAO,CAAC;IACvD;EACF;EAEA,OAAOX,UAAU;AACnB,CAAC;AAED,OAAO,MAAMY,kCAAkC,GAAG,OAAOP,KAAK,EAAEQ,QAAQ,KAAK;EAC3E,IAAI,CAACR,KAAK,IAAI,CAACQ,QAAQ,EAAE;EAEzB,OAAO,MAAM5C,8BAA8B,CAACqB,IAAI,EAAEe,KAAK,EAAEQ,QAAQ,CAAC;AACpE,CAAC;AAED,OAAO,MAAMC,kCAAkC,GAAG,OAAOT,KAAK,EAAEQ,QAAQ,KAAK;EAC3E,IAAI,CAACR,KAAK,IAAI,CAACQ,QAAQ,EAAE;EAEzB,OAAO,MAAM3C,0BAA0B,CAACoB,IAAI,EAAEe,KAAK,EAAEQ,QAAQ,CAAC;AAChE,CAAC;AAED,OAAO,MAAME,WAAW,GAAG,YAAY,MAAM5C,OAAO,CAACmB,IAAI,CAAC;AAE1D,OAAO,MAAM0B,0BAA0B,GAAIC,QAAQ,IACjD7C,kBAAkB,CAACkB,IAAI,EAAE2B,QAAQ,CAAC;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}