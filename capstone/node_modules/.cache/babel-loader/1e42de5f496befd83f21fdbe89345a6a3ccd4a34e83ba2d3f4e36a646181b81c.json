{"ast":null,"code":"import { compose, createStore, applyMiddleware } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport logger from \"redux-logger\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { rootSaga } from \"../store/root-saga\";\nimport { rootReducer } from \"./root-reducer\";\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"cart\"]\n};\nconst sagaMiddleWare = createSagaMiddleware();\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst middleWares = [process.env.NODE_ENV !== \"production\" && logger, sagaMiddleWare].filter(Boolean);\nconst composeEnhancer = process.env.NODE_ENV !== \"production\" && window && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst composedEnhancers = composeEnhancer(applyMiddleware(...middleWares));\nexport const store = createStore(persistedReducer, undefined, composedEnhancers);\nexport const persistor = persistStore(store);","map":{"version":3,"names":["compose","createStore","applyMiddleware","persistStore","persistReducer","storage","logger","createSagaMiddleware","rootSaga","rootReducer","persistConfig","key","whitelist","sagaMiddleWare","persistedReducer","middleWares","process","env","NODE_ENV","filter","Boolean","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","composedEnhancers","store","undefined","persistor"],"sources":["/Users/youssefragab/Documents/courses/react-course/capstone/src/store/store.js"],"sourcesContent":["import { compose, createStore, applyMiddleware } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport logger from \"redux-logger\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport { rootSaga } from \"../store/root-saga\";\n\nimport { rootReducer } from \"./root-reducer\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"cart\"],\n};\n\nconst sagaMiddleWare = createSagaMiddleware();\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst middleWares = [\n  process.env.NODE_ENV !== \"production\" && logger,\n  sagaMiddleWare,\n].filter(Boolean);\n\nconst composeEnhancer =\n  (process.env.NODE_ENV !== \"production\" &&\n    window &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nconst composedEnhancers = composeEnhancer(applyMiddleware(...middleWares));\n\nexport const store = createStore(\n  persistedReducer,\n  undefined,\n  composedEnhancers\n);\n\nexport const persistor = persistStore(store);\n"],"mappings":"AAAA,SAASA,OAAO,EAAEC,WAAW,EAAEC,eAAe,QAAQ,OAAO;AAC7D,SAASC,YAAY,EAAEC,cAAc,QAAQ,eAAe;AAC5D,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,oBAAoB,MAAM,YAAY;AAE7C,SAASC,QAAQ,QAAQ,oBAAoB;AAE7C,SAASC,WAAW,QAAQ,gBAAgB;AAE5C,MAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACXN,OAAO;EACPO,SAAS,EAAE,CAAC,MAAM;AACpB,CAAC;AAED,MAAMC,cAAc,GAAGN,oBAAoB,EAAE;AAE7C,MAAMO,gBAAgB,GAAGV,cAAc,CAACM,aAAa,EAAED,WAAW,CAAC;AAEnE,MAAMM,WAAW,GAAG,CAClBC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,IAAIZ,MAAM,EAC/CO,cAAc,CACf,CAACM,MAAM,CAACC,OAAO,CAAC;AAEjB,MAAMC,eAAe,GAClBL,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,IACpCI,MAAM,IACNA,MAAM,CAACC,oCAAoC,IAC7CvB,OAAO;AAET,MAAMwB,iBAAiB,GAAGH,eAAe,CAACnB,eAAe,CAAC,GAAGa,WAAW,CAAC,CAAC;AAE1E,OAAO,MAAMU,KAAK,GAAGxB,WAAW,CAC9Ba,gBAAgB,EAChBY,SAAS,EACTF,iBAAiB,CAClB;AAED,OAAO,MAAMG,SAAS,GAAGxB,YAAY,CAACsB,KAAK,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}