{"ast":null,"code":"import { takeLatest, all, call, put } from \"redux-saga/effects\";\nimport { USER_ACTION_TYPES } from \"./user.types\";\nimport { signInSuccess, signInFailed } from \"./user.action\";\nimport { getCurrentUser, createUserDocumentFromAuth } from \"../../utils/firebase/firebase.utils\";\nexport function* getSnapshotFromUserAuth(userAuth, additionalDetails) {\n  try {\n    const userSnapshot = yield call(createUserDocumentFromAuth, userAuth, additionalDetails);\n    yield put(signInSuccess);\n  } catch (error) {\n    yield put(signInFailed(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield call(getCurrentUser);\n    if (!userAuth) return;\n    yield call(getSnapshotFromUserAuth, userAuth);\n  } catch (error) {}\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(USER_ACTION_TYPES.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* userSagas() {\n  yield all([call(onCheckUserSession)]);\n}","map":{"version":3,"names":["takeLatest","all","call","put","USER_ACTION_TYPES","signInSuccess","signInFailed","getCurrentUser","createUserDocumentFromAuth","getSnapshotFromUserAuth","userAuth","additionalDetails","userSnapshot","error","isUserAuthenticated","onCheckUserSession","CHECK_USER_SESSION","userSagas"],"sources":["/Users/youssefragab/Documents/courses/react-course/capstone/src/store/user/user.saga.js"],"sourcesContent":["import { takeLatest, all, call, put } from \"redux-saga/effects\";\n\nimport { USER_ACTION_TYPES } from \"./user.types\";\n\nimport { signInSuccess, signInFailed } from \"./user.action\";\n\nimport {\n  getCurrentUser,\n  createUserDocumentFromAuth,\n} from \"../../utils/firebase/firebase.utils\";\n\nexport function* getSnapshotFromUserAuth(userAuth, additionalDetails) {\n  try {\n    const userSnapshot = yield call(\n      createUserDocumentFromAuth,\n      userAuth,\n      additionalDetails\n    );\n    yield put(signInSuccess);\n  } catch (error) {\n    yield put(signInFailed(error));\n  }\n}\n\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield call(getCurrentUser);\n    if (!userAuth) return;\n    yield call(getSnapshotFromUserAuth, userAuth);\n  } catch (error) {}\n}\n\nexport function* onCheckUserSession() {\n  yield takeLatest(USER_ACTION_TYPES.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nexport function* userSagas() {\n  yield all([call(onCheckUserSession)]);\n}\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,GAAG,EAAEC,IAAI,EAAEC,GAAG,QAAQ,oBAAoB;AAE/D,SAASC,iBAAiB,QAAQ,cAAc;AAEhD,SAASC,aAAa,EAAEC,YAAY,QAAQ,eAAe;AAE3D,SACEC,cAAc,EACdC,0BAA0B,QACrB,qCAAqC;AAE5C,OAAO,UAAUC,uBAAuB,CAACC,QAAQ,EAAEC,iBAAiB,EAAE;EACpE,IAAI;IACF,MAAMC,YAAY,GAAG,MAAMV,IAAI,CAC7BM,0BAA0B,EAC1BE,QAAQ,EACRC,iBAAiB,CAClB;IACD,MAAMR,GAAG,CAACE,aAAa,CAAC;EAC1B,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACd,MAAMV,GAAG,CAACG,YAAY,CAACO,KAAK,CAAC,CAAC;EAChC;AACF;AAEA,OAAO,UAAUC,mBAAmB,GAAG;EACrC,IAAI;IACF,MAAMJ,QAAQ,GAAG,MAAMR,IAAI,CAACK,cAAc,CAAC;IAC3C,IAAI,CAACG,QAAQ,EAAE;IACf,MAAMR,IAAI,CAACO,uBAAuB,EAAEC,QAAQ,CAAC;EAC/C,CAAC,CAAC,OAAOG,KAAK,EAAE,CAAC;AACnB;AAEA,OAAO,UAAUE,kBAAkB,GAAG;EACpC,MAAMf,UAAU,CAACI,iBAAiB,CAACY,kBAAkB,EAAEF,mBAAmB,CAAC;AAC7E;AAEA,OAAO,UAAUG,SAAS,GAAG;EAC3B,MAAMhB,GAAG,CAAC,CAACC,IAAI,CAACa,kBAAkB,CAAC,CAAC,CAAC;AACvC"},"metadata":{},"sourceType":"module","externalDependencies":[]}