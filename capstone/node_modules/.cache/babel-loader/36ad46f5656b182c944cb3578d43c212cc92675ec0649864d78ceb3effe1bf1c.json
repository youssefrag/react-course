{"ast":null,"code":"// import { compose, createStore, applyMiddleware } from \"redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\n// import { persistStore, persistReducer } from \"redux-persist\";\n// import storage from \"redux-persist/lib/storage\";\nimport logger from \"redux-logger\";\nimport createSagaMiddleware from \"redux-saga\";\n\n// import { rootSaga } from \"../store/root-saga\";\n\nimport { rootReducer } from \"./root-reducer\";\n\n// const persistConfig = {\n//   key: \"root\",\n//   storage,\n//   whitelist: [\"cart\"],\n// };\n\nconst sagaMiddleWare = createSagaMiddleware();\n\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst middleWares = [process.env.NODE_ENV !== \"production\" && logger, sagaMiddleWare].filter(Boolean);\n\n// const composeEnhancer =\n//   (process.env.NODE_ENV !== \"production\" &&\n//     window &&\n//     window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n//   compose;\n\n// const composedEnhancers = composeEnhancer(applyMiddleware(...middleWares));\n\nexport const store = configureStore({\n  reducer: rootReducer\n  // middleware: middleWares,\n});\n\n// sagaMiddleWare.run(rootSaga);\n\n// export const persistor = persistStore(store);","map":{"version":3,"names":["configureStore","logger","createSagaMiddleware","rootReducer","sagaMiddleWare","middleWares","process","env","NODE_ENV","filter","Boolean","store","reducer"],"sources":["/Users/youssefragab/Documents/courses/react-course/capstone/src/store/store.js"],"sourcesContent":["// import { compose, createStore, applyMiddleware } from \"redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\n// import { persistStore, persistReducer } from \"redux-persist\";\n// import storage from \"redux-persist/lib/storage\";\nimport logger from \"redux-logger\";\nimport createSagaMiddleware from \"redux-saga\";\n\n// import { rootSaga } from \"../store/root-saga\";\n\nimport { rootReducer } from \"./root-reducer\";\n\n// const persistConfig = {\n//   key: \"root\",\n//   storage,\n//   whitelist: [\"cart\"],\n// };\n\nconst sagaMiddleWare = createSagaMiddleware();\n\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst middleWares = [\n  process.env.NODE_ENV !== \"production\" && logger,\n  sagaMiddleWare,\n].filter(Boolean);\n\n// const composeEnhancer =\n//   (process.env.NODE_ENV !== \"production\" &&\n//     window &&\n//     window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n//   compose;\n\n// const composedEnhancers = composeEnhancer(applyMiddleware(...middleWares));\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  // middleware: middleWares,\n});\n\n// sagaMiddleWare.run(rootSaga);\n\n// export const persistor = persistStore(store);\n"],"mappings":"AAAA;AACA,SAASA,cAAc,QAAQ,kBAAkB;AACjD;AACA;AACA,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,oBAAoB,MAAM,YAAY;;AAE7C;;AAEA,SAASC,WAAW,QAAQ,gBAAgB;;AAE5C;AACA;AACA;AACA;AACA;;AAEA,MAAMC,cAAc,GAAGF,oBAAoB,EAAE;;AAE7C;;AAEA,MAAMG,WAAW,GAAG,CAClBC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,IAAIP,MAAM,EAC/CG,cAAc,CACf,CAACK,MAAM,CAACC,OAAO,CAAC;;AAEjB;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAO,MAAMC,KAAK,GAAGX,cAAc,CAAC;EAClCY,OAAO,EAAET;EACT;AACF,CAAC,CAAC;;AAEF;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}