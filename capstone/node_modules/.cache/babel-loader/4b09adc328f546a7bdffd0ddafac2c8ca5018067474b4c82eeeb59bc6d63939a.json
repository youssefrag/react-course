{"ast":null,"code":"var _jsxFileName = \"/Users/youssefragab/Documents/courses/react-course/capstone/src/components/sign-in-form/sign-in-form.components.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport FormInput from \"./../form-input/form-input.component\";\nimport Button, { BUTTON_TYPE_CLASSES } from \"../button/button.component\";\nimport { SignInContainer, ButtonsContainer } from \"./sign-in-form.styles.styles\";\n// import // googleSignInStart,\n// // emailSignInStart,\n// \"../../store/user/user.action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultFormFields = {\n  email: \"\",\n  password: \"\"\n};\nconst SignInForm = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [formFields, setFormFields] = useState(defaultFormFields);\n  const {\n    email,\n    password\n  } = formFields;\n  const resetFormFields = () => {\n    setFormFields(defaultFormFields);\n  };\n\n  // const signInWithGoogle = async () => {\n  //   dispatch(googleSignInStart());\n  // };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    // try {\n    //   dispatch(emailSignInStart(email, password));\n    //   resetFormFields();\n    // } catch (error) {\n    //   console.log(\"user sign in failed\", error);\n    // }\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormFields({\n      ...formFields,\n      [name]: value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(SignInContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Already have an account?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign in with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Email\",\n        type: \"email\",\n        required: true,\n        onChange: handleChange,\n        name: \"email\",\n        value: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Password\",\n        type: \"password\",\n        required: true,\n        onChange: handleChange,\n        name: \"password\",\n        value: password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonsContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          buttonType: BUTTON_TYPE_CLASSES.google,\n          type: \"button\"\n          // onClick={signInWithGoogle}\n          ,\n          children: \"Sign In With Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(SignInForm, \"+vG4hxB0oI88WeE0uGfqhR+TWzY=\", false, function () {\n  return [useDispatch];\n});\n_c = SignInForm;\nexport default SignInForm;\nvar _c;\n$RefreshReg$(_c, \"SignInForm\");","map":{"version":3,"names":["useState","useDispatch","FormInput","Button","BUTTON_TYPE_CLASSES","SignInContainer","ButtonsContainer","defaultFormFields","email","password","SignInForm","dispatch","formFields","setFormFields","resetFormFields","handleSubmit","event","preventDefault","handleChange","name","value","target","google"],"sources":["/Users/youssefragab/Documents/courses/react-course/capstone/src/components/sign-in-form/sign-in-form.components.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport FormInput from \"./../form-input/form-input.component\";\nimport Button, { BUTTON_TYPE_CLASSES } from \"../button/button.component\";\n\nimport {\n  SignInContainer,\n  ButtonsContainer,\n} from \"./sign-in-form.styles.styles\";\n// import // googleSignInStart,\n// // emailSignInStart,\n// \"../../store/user/user.action\";\n\nconst defaultFormFields = {\n  email: \"\",\n  password: \"\",\n};\n\nconst SignInForm = () => {\n  const dispatch = useDispatch();\n\n  const [formFields, setFormFields] = useState(defaultFormFields);\n  const { email, password } = formFields;\n\n  const resetFormFields = () => {\n    setFormFields(defaultFormFields);\n  };\n\n  // const signInWithGoogle = async () => {\n  //   dispatch(googleSignInStart());\n  // };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    // try {\n    //   dispatch(emailSignInStart(email, password));\n    //   resetFormFields();\n    // } catch (error) {\n    //   console.log(\"user sign in failed\", error);\n    // }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormFields({ ...formFields, [name]: value });\n  };\n\n  return (\n    <SignInContainer>\n      <h2>Already have an account?</h2>\n      <span>Sign in with your email and password</span>\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          label=\"Email\"\n          type=\"email\"\n          required\n          onChange={handleChange}\n          name=\"email\"\n          value={email}\n        />\n\n        <FormInput\n          label=\"Password\"\n          type=\"password\"\n          required\n          onChange={handleChange}\n          name=\"password\"\n          value={password}\n        />\n        <ButtonsContainer>\n          <Button type=\"submit\">Sign In</Button>\n          <Button\n            buttonType={BUTTON_TYPE_CLASSES.google}\n            type=\"button\"\n            // onClick={signInWithGoogle}\n          >\n            Sign In With Google\n          </Button>\n        </ButtonsContainer>\n      </form>\n    </SignInContainer>\n  );\n};\n\nexport default SignInForm;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,aAAa;AAEzC,OAAOC,SAAS,MAAM,sCAAsC;AAC5D,OAAOC,MAAM,IAAIC,mBAAmB,QAAQ,4BAA4B;AAExE,SACEC,eAAe,EACfC,gBAAgB,QACX,8BAA8B;AACrC;AACA;AACA;AAAA;AAEA,MAAMC,iBAAiB,GAAG;EACxBC,KAAK,EAAE,EAAE;EACTC,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,UAAU,GAAG,MAAM;EAAA;EACvB,MAAMC,QAAQ,GAAGV,WAAW,EAAE;EAE9B,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAACO,iBAAiB,CAAC;EAC/D,MAAM;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGG,UAAU;EAEtC,MAAME,eAAe,GAAG,MAAM;IAC5BD,aAAa,CAACN,iBAAiB,CAAC;EAClC,CAAC;;EAED;EACA;EACA;;EAEA,MAAMQ,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,EAAE;;IAEtB;IACA;IACA;IACA;IACA;IACA;EACF,CAAC;;EAED,MAAMC,YAAY,GAAIF,KAAK,IAAK;IAC9B,MAAM;MAAEG,IAAI;MAAEC;IAAM,CAAC,GAAGJ,KAAK,CAACK,MAAM;IAEpCR,aAAa,CAAC;MAAE,GAAGD,UAAU;MAAE,CAACO,IAAI,GAAGC;IAAM,CAAC,CAAC;EACjD,CAAC;EAED,oBACE,QAAC,eAAe;IAAA,wBACd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAiC,eACjC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAiD,eACjD;MAAM,QAAQ,EAAEL,YAAa;MAAA,wBAC3B,QAAC,SAAS;QACR,KAAK,EAAC,OAAO;QACb,IAAI,EAAC,OAAO;QACZ,QAAQ;QACR,QAAQ,EAAEG,YAAa;QACvB,IAAI,EAAC,OAAO;QACZ,KAAK,EAAEV;MAAM;QAAA;QAAA;QAAA;MAAA,QACb,eAEF,QAAC,SAAS;QACR,KAAK,EAAC,UAAU;QAChB,IAAI,EAAC,UAAU;QACf,QAAQ;QACR,QAAQ,EAAEU,YAAa;QACvB,IAAI,EAAC,UAAU;QACf,KAAK,EAAET;MAAS;QAAA;QAAA;QAAA;MAAA,QAChB,eACF,QAAC,gBAAgB;QAAA,wBACf,QAAC,MAAM;UAAC,IAAI,EAAC,QAAQ;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAiB,eACtC,QAAC,MAAM;UACL,UAAU,EAAEL,mBAAmB,CAACkB,MAAO;UACvC,IAAI,EAAC;UACL;UAAA;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAGO;MAAA;QAAA;QAAA;QAAA;MAAA,QACQ;IAAA;MAAA;MAAA;MAAA;IAAA,QACd;EAAA;IAAA;IAAA;IAAA;EAAA,QACS;AAEtB,CAAC;AAAC,GAlEIZ,UAAU;EAAA,QACGT,WAAW;AAAA;AAAA,KADxBS,UAAU;AAoEhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}