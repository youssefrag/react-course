{"ast":null,"code":"var _jsxFileName = \"/Users/youssefragab/Documents/courses/react-course/capstone/src/contexts/cart.context.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useReducer } from \"react\";\nimport { createAction } from \"../utils/reducer/reducer.utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst addCartItem = (cartItems, productToAdd) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === productToAdd.id);\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === productToAdd.id ? {\n      ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  }\n  return [...cartItems, {\n    ...productToAdd,\n    quantity: 1\n  }];\n};\nconst removeCartItem = (cartItems, cartItemToRemove) => {\n  // find the cart item to remove\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToRemove.id);\n\n  // check if quantity is equal to 1, if it is remove that item from the cart\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\n  }\n\n  // return back cartitems with matching cart item with reduced quantity\n  return cartItems.map(cartItem => cartItem.id === cartItemToRemove.id ? {\n    ...cartItem,\n    quantity: cartItem.quantity - 1\n  } : cartItem);\n};\nconst CART_ACTION_TYPES = {\n  SET_IS_CART_OPEN: \"SET_IS_CART_OPEN\",\n  SET_CART_ITEMS: \"SET_CART_ITEMS\",\n  SET_CART_COUNT: \"SET_CART_COUNT\",\n  SET_CART_TOTAL: \"SET_CART_TOTAL\"\n};\nconst INITIAL_STATE = {\n  isCartOpen: false,\n  cartItems: [],\n  cartCount: 0,\n  cartTotal: 0\n};\nconst cartReducer = (state, action) => {\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case CART_ACTION_TYPES.SET_CART_ITEMS:\n      return {\n        ...state,\n        ...payload\n      };\n    default:\n      throw new Error(`Unhandled type ${type} in cartReducer`);\n  }\n};\nconst clearCartItem = (cartItems, cartItemToClear) => cartItems.filter(cartItem => cartItem.id !== cartItemToClear.id);\nexport const CartContext = /*#__PURE__*/createContext({\n  isCartOpen: false,\n  setIsCartOpen: () => {},\n  cartItems: [],\n  addItemToCart: () => {},\n  removeItemFromCart: () => {},\n  clearItemFromCart: () => {},\n  cartCount: 0,\n  cartTotal: 0\n});\nexport const CartProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const [{\n    cartCount,\n    cartTotal,\n    cartItems\n  }, dispatch] = useReducer(cartReducer, INITIAL_STATE);\n  const updateCartItemsReducer = cartItems => {\n    const newCartCount = cartItems.reduce((total, cartItem) => total + cartItem.quantity, 0);\n    const newCartTotal = cartItems.reduce((total, cartItem) => total + cartItem.quantity * cartItem.price, 0);\n    const payload = {\n      cartItems,\n      cartCount: newCartCount,\n      cartTotal: newCartTotal\n    };\n    dispatch(createAction(CART_ACTION_TYPES.SET_CART_ITEMS, payload));\n  };\n  const addItemToCart = productToAdd => {\n    const newCartItems = addCartItem(cartItems, productToAdd);\n    updateCartItemsReducer(newCartItems);\n  };\n  const removeItemToCart = cartItemToRemove => {\n    const newCartItems = removeCartItem(cartItems, cartItemToRemove);\n    updateCartItemsReducer(newCartItems);\n  };\n  const clearItemFromCart = cartItemToClear => {\n    const newCartItems = clearCartItem(cartItems, cartItemToClear);\n    updateCartItemsReducer(newCartItems);\n  };\n  const value = {\n    isCartOpen,\n    setIsCartOpen,\n    addItemToCart,\n    removeItemToCart,\n    clearItemFromCart,\n    cartItems,\n    cartCount,\n    cartTotal\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 10\n  }, this);\n};\n_s(CartProvider, \"Pi96wqJ5DC/xVGqzCIB7CytznYc=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useState","useReducer","createAction","addCartItem","cartItems","productToAdd","existingCartItem","find","cartItem","id","map","quantity","removeCartItem","cartItemToRemove","filter","CART_ACTION_TYPES","SET_IS_CART_OPEN","SET_CART_ITEMS","SET_CART_COUNT","SET_CART_TOTAL","INITIAL_STATE","isCartOpen","cartCount","cartTotal","cartReducer","state","action","type","payload","Error","clearCartItem","cartItemToClear","CartContext","setIsCartOpen","addItemToCart","removeItemFromCart","clearItemFromCart","CartProvider","children","dispatch","updateCartItemsReducer","newCartCount","reduce","total","newCartTotal","price","newCartItems","removeItemToCart","value"],"sources":["/Users/youssefragab/Documents/courses/react-course/capstone/src/contexts/cart.context.jsx"],"sourcesContent":["import { createContext, useState, useReducer } from \"react\";\n\nimport { createAction } from \"../utils/reducer/reducer.utils\";\n\nconst addCartItem = (cartItems, productToAdd) => {\n  const existingCartItem = cartItems.find(\n    (cartItem) => cartItem.id === productToAdd.id\n  );\n\n  if (existingCartItem) {\n    return cartItems.map((cartItem) =>\n      cartItem.id === productToAdd.id\n        ? { ...cartItem, quantity: cartItem.quantity + 1 }\n        : cartItem\n    );\n  }\n\n  return [...cartItems, { ...productToAdd, quantity: 1 }];\n};\n\nconst removeCartItem = (cartItems, cartItemToRemove) => {\n  // find the cart item to remove\n  const existingCartItem = cartItems.find(\n    (cartItem) => cartItem.id === cartItemToRemove.id\n  );\n\n  // check if quantity is equal to 1, if it is remove that item from the cart\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter((cartItem) => cartItem.id !== cartItemToRemove.id);\n  }\n\n  // return back cartitems with matching cart item with reduced quantity\n  return cartItems.map((cartItem) =>\n    cartItem.id === cartItemToRemove.id\n      ? { ...cartItem, quantity: cartItem.quantity - 1 }\n      : cartItem\n  );\n};\n\nconst CART_ACTION_TYPES = {\n  SET_IS_CART_OPEN: \"SET_IS_CART_OPEN\",\n  SET_CART_ITEMS: \"SET_CART_ITEMS\",\n  SET_CART_COUNT: \"SET_CART_COUNT\",\n  SET_CART_TOTAL: \"SET_CART_TOTAL\",\n};\n\nconst INITIAL_STATE = {\n  isCartOpen: false,\n  cartItems: [],\n  cartCount: 0,\n  cartTotal: 0,\n};\n\nconst cartReducer = (state, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case CART_ACTION_TYPES.SET_CART_ITEMS:\n      return {\n        ...state,\n        ...payload,\n      };\n    default:\n      throw new Error(`Unhandled type ${type} in cartReducer`);\n  }\n};\n\nconst clearCartItem = (cartItems, cartItemToClear) =>\n  cartItems.filter((cartItem) => cartItem.id !== cartItemToClear.id);\n\nexport const CartContext = createContext({\n  isCartOpen: false,\n  setIsCartOpen: () => {},\n  cartItems: [],\n  addItemToCart: () => {},\n  removeItemFromCart: () => {},\n  clearItemFromCart: () => {},\n  cartCount: 0,\n  cartTotal: 0,\n});\n\nexport const CartProvider = ({ children }) => {\n  const [isCartOpen, setIsCartOpen] = useState(false);\n\n  const [{ cartCount, cartTotal, cartItems }, dispatch] = useReducer(\n    cartReducer,\n    INITIAL_STATE\n  );\n\n  const updateCartItemsReducer = (cartItems) => {\n    const newCartCount = cartItems.reduce(\n      (total, cartItem) => total + cartItem.quantity,\n      0\n    );\n\n    const newCartTotal = cartItems.reduce(\n      (total, cartItem) => total + cartItem.quantity * cartItem.price,\n      0\n    );\n\n    const payload = {\n      cartItems,\n      cartCount: newCartCount,\n      cartTotal: newCartTotal,\n    };\n\n    dispatch(createAction(CART_ACTION_TYPES.SET_CART_ITEMS, payload));\n  };\n\n  const addItemToCart = (productToAdd) => {\n    const newCartItems = addCartItem(cartItems, productToAdd);\n    updateCartItemsReducer(newCartItems);\n  };\n\n  const removeItemToCart = (cartItemToRemove) => {\n    const newCartItems = removeCartItem(cartItems, cartItemToRemove);\n    updateCartItemsReducer(newCartItems);\n  };\n\n  const clearItemFromCart = (cartItemToClear) => {\n    const newCartItems = clearCartItem(cartItems, cartItemToClear);\n    updateCartItemsReducer(newCartItems);\n  };\n\n  const value = {\n    isCartOpen,\n    setIsCartOpen,\n    addItemToCart,\n    removeItemToCart,\n    clearItemFromCart,\n    cartItems,\n    cartCount,\n    cartTotal,\n  };\n\n  return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}