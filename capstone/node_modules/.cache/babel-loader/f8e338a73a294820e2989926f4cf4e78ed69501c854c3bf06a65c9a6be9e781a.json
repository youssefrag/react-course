{"ast":null,"code":"import { compose, createStore, applyMiddleware } from \"redux\";\nimport logger from \"redux-logger\";\nimport { rootReducer } from \"./root-reducer\";\nconst loggerMiddleware = store => next => action => {\n  if (!action.type) {\n    return next(action);\n  }\n  console.log();\n};\nconst middleWares = [process.env.NODE_ENV === \"development\" && logger].filter(Boolean);\nconst composedEnhancers = compose(applyMiddleware(...middleWares));\nexport const store = createStore(rootReducer, undefined, composedEnhancers);","map":{"version":3,"names":["compose","createStore","applyMiddleware","logger","rootReducer","loggerMiddleware","store","next","action","type","console","log","middleWares","process","env","NODE_ENV","filter","Boolean","composedEnhancers","undefined"],"sources":["/Users/youssefragab/Documents/courses/react-course/capstone/src/store/store.js"],"sourcesContent":["import { compose, createStore, applyMiddleware } from \"redux\";\nimport logger from \"redux-logger\";\n\nimport { rootReducer } from \"./root-reducer\";\n\nconst loggerMiddleware = (store) => (next) => (action) => {\n  if (!action.type) {\n    return next(action);\n  }\n\n  console.log();\n};\n\nconst middleWares = [process.env.NODE_ENV === \"development\" && logger].filter(\n  Boolean\n);\n\nconst composedEnhancers = compose(applyMiddleware(...middleWares));\n\nexport const store = createStore(rootReducer, undefined, composedEnhancers);\n"],"mappings":"AAAA,SAASA,OAAO,EAAEC,WAAW,EAAEC,eAAe,QAAQ,OAAO;AAC7D,OAAOC,MAAM,MAAM,cAAc;AAEjC,SAASC,WAAW,QAAQ,gBAAgB;AAE5C,MAAMC,gBAAgB,GAAIC,KAAK,IAAMC,IAAI,IAAMC,MAAM,IAAK;EACxD,IAAI,CAACA,MAAM,CAACC,IAAI,EAAE;IAChB,OAAOF,IAAI,CAACC,MAAM,CAAC;EACrB;EAEAE,OAAO,CAACC,GAAG,EAAE;AACf,CAAC;AAED,MAAMC,WAAW,GAAG,CAACC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,IAAIZ,MAAM,CAAC,CAACa,MAAM,CAC3EC,OAAO,CACR;AAED,MAAMC,iBAAiB,GAAGlB,OAAO,CAACE,eAAe,CAAC,GAAGU,WAAW,CAAC,CAAC;AAElE,OAAO,MAAMN,KAAK,GAAGL,WAAW,CAACG,WAAW,EAAEe,SAAS,EAAED,iBAAiB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}